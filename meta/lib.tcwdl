use std::cell::RefCell;
use tcw3::{
    uicore::HView,
    ui::{
        layouts::TableLayout,
        theming::{Manager, StyledBox},
        views::{Button, Label},
    },
    pal,
};

use crate::{CalcButton, CalcState};

comp crate::MainView {
    const style_manager: &Manager { set; }
    const wm: pal::Wm { set; }

    prop calc_state: CalcState = CalcState::new();

    const label = Label::new! {
        style_manager = get!(style_manager),
        text = get!(&calc_state).value.clone(),
    };

    const label_wrapper = StyledBox::new! {
        style_manager = get!(style_manager),
        view_flags = Default::default(),
        class_set = elem_id::LABEL,
        subview_generic = get!(label.view),
    };

    const b00 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = 'c' };
    const b01 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = 'C' };
    const b02 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '⌫' };
    const b03 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '÷' };

    const b10 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '7' };
    const b11 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '8' };
    const b12 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '9' };
    const b13 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '×' };

    const b20 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '4' };
    const b21 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '5' };
    const b22 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '6' };
    const b23 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '−' };

    const b30 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '1' };
    const b31 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '2' };
    const b32 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '3' };
    const b33 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '+' };

    const b40 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '±' };
    const b41 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '0' };
    const b42 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '.' };
    const b43 = CalcButton::new! { style_manager = get!(style_manager), wm = get!(wm), op = '=' };

    on (
        b00.activated, b01.activated, b02.activated, b03.activated,
        b10.activated, b11.activated, b12.activated, b13.activated,
        b20.activated, b21.activated, b22.activated, b23.activated,
        b30.activated, b31.activated, b32.activated, b33.activated,
        b40.activated, b41.activated, b42.activated, b43.activated,
    ) {
        get!(&this).handle_op(get!(event.op));
    }

    const buttons = HView::new! {
        flags = Default::default(),

        layout = TableLayout::new(
            [
                get!(&b00.view), get!(&b01.view), get!(&b02.view), get!(&b03.view),
                get!(&b10.view), get!(&b11.view), get!(&b12.view), get!(&b13.view),
                get!(&b20.view), get!(&b21.view), get!(&b22.view), get!(&b23.view),
                get!(&b30.view), get!(&b31.view), get!(&b32.view), get!(&b33.view),
                get!(&b40.view), get!(&b41.view), get!(&b42.view), get!(&b43.view),
            ]
                .iter()
                .enumerate()
                .map(|(i, &v)| (v.clone(), [i % 4, i / 4], AlignFlags::JUSTIFY))
        )
            .with_uniform_margin(6.0),
    };

    const wrapper = StyledBox::new! {
        style_manager = get!(style_manager),
        view_flags = Default::default(),

        class_set = elem_id::WRAPPER,

        subview_generic = HView::new! {
            flags = Default::default(),

            layout = TableLayout::stack_vert(vec![
                (get!(label_wrapper.view), AlignFlags::JUSTIFY),
                (get!(buttons), AlignFlags::JUSTIFY),
            ]),
        },
    };

    const view: HView = get!(wrapper.view);
}

comp crate::CalcButton {
    const style_manager: &Manager { set; }
    const wm: pal::Wm { set; }
    const op: char { set; get; }

    event activated(op: char);
    on (button.activated) { get!(&this).raise_activated(get!(op)); }

    const button = Button::new! {
        style_manager = get!(style_manager),
        class_set = match get!(op) {
            'c' | 'C' | '⌫' | '÷' |
            '×' | '−' | '+' | '=' => ClassSet::BUTTON | elem_id::RED,
            _ => ClassSet::BUTTON,
        },
        caption = if get!(op) == 'c' { "CE".to_string() } else { get!(op).to_string() },
    };

    const view: HView = get!(button.view);
}
